{
    "include": ["src", "types"],
    "compilerOptions": {
        "module": "esnext",
        "target": "esnext",
        "moduleResolution": "node",
        "jsx": "preserve",
        "baseUrl": "./",
        /* paths - If you configure Snowpack import aliases, add them here. */
        "paths": {},
        /* noEmit - Snowpack builds (emits) files, not tsc. */
        "noEmit": true,
        /* Additional Options */
        "skipLibCheck": true,
        "forceConsistentCasingInFileNames": true,
        "resolveJsonModule": true,
        "allowSyntheticDefaultImports": true,
        "importsNotUsedAsValues": "error",
        "pretty": true,

        /* -- Strict Type-Checking Options -- */
        "alwaysStrict": true,                       /* Parse in strict mode and emit "use strict" for each source file. */
        "noImplicitAny": true,                      /* Raise error on expressions and declarations with an implied 'any' type. */
        "noImplicitThis": true,                     /* Raise error on 'this' expressions with an implied 'any' type. */
        "strict": true,                             /* Enable all strict type-checking options. */
        "strictFunctionTypes": true,                /* Enable strict checking of function types. */
        "strictNullChecks": true,                   /* Enable strict null checks. */
        "strictPropertyInitialization": true,       /* Ensure non-undefined class properties are initialized in the constructor. */
        // "noStrictGenericChecks": true,           /* Disable strict checking of generic signatures in function types. */

        /* -- Additional Checks -- */
        "noFallthroughCasesInSwitch": false,        /* Report errors for fallthrough cases in switch statement. */
        "noImplicitReturns": true,                  /* Report error when not all code paths in function return a value. */
        "noUnusedLocals": true,                     /* Report errors on unused locals. */
        "noUnusedParameters": true,                 /* Report errors on unused parameters. */
    }
}
